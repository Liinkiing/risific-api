User:
  type: object
  config:
    interfaces: [Node]
    description: A user
    fields:
      id:
        description: The ID of the user
        type: ID!
      roles:
        description: The role(s) of the user
        type: '[UserRole]'
        access: '@=serv("App\\GraphQL\\Resolver\\User\\UserIsGrantedResolver").isGranted(getUser(), value)'
      createdAt:
        description: The signup date of the user
        type: DateTime!
        access: '@=serv("App\\GraphQL\\Resolver\\User\\UserIsGrantedResolver", [getUser(), value])'
      username:
        description: The username of the user
        type: String!
      email:
        description: The email of the user
        type: String!
        access: '@=serv("App\\GraphQL\\Resolver\\User\\UserIsGrantedResolver").isGranted(getUser(), value)'